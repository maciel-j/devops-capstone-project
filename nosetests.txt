********************* [2024.11.19-08:24:09] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should return security headers[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   20      3    85%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                255     11    96%
----------------------------------------------------------------------
Ran 26 tests in 0.843s

OK

********************* [2024.11.19-08:21:06] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;31m- It should not allow an illegal method call (FAILED)[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should return security headers[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
FAIL: It should not allow an illegal method call
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_error_handlers.py", line 53, in test_method_not_allowed
    self.assertEqual(resp.status_code, status.HTTP_405_METHOD_NOT_ALLOWED)
AssertionError: 302 != 405
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   20      3    85%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                255     11    96%
----------------------------------------------------------------------
Ran 27 tests in 1.027s

FAILED (failures=1)

********************* [2024.11.19-08:18:12] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;31m- It should not allow an illegal method call (FAILED)[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should return security headers[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
FAIL: It should not allow an illegal method call
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_error_handlers.py", line 52, in test_method_not_allowed
    self.assertEqual(resp.status_code, status.HTTP_405_METHOD_NOT_ALLOWED)
AssertionError: 302 != 405
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   20      3    85%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                255     11    96%
----------------------------------------------------------------------
Ran 27 tests in 0.869s

FAILED (failures=1)

********************* [2024.11.19-08:15:52] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;31m- It should not allow an illegal method call (FAILED)[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;31m- It should not Create an Account when sending the wrong data (FAILED)[1;0m
[1;31m- It should Create a new Account (FAILED)[1;0m
[1;31m- It should Delete a single Account (FAILED)[1;0m
[1;31m- It should Get a list of Accounts (FAILED)[1;0m
[1;31m- It should be healthy (FAILED)[1;0m
[1;31m- It should get 200_OK from the Home Page (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when resource not exists (FAILED)[1;0m
[1;31m- It should Read a single Account (FAILED)[1;0m
[1;31m- It should return NOT found a single Account (FAILED)[1;0m
[1;32m- It should return security headers[1;0m
[1;31m- It should not Create an Account when sending the wrong media type (FAILED)[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when try update an inexisting account (FAILED)[1;0m

======================================================================
FAIL: It should not allow an illegal method call
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_error_handlers.py", line 52, in test_method_not_allowed
    self.assertEqual(resp.status_code, status.HTTP_405_METHOD_NOT_ALLOWED)
AssertionError: 302 != 405
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should not Create an Account when sending the wrong data
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 115, in test_bad_request
    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)
AssertionError: 302 != 400
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Create a new Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 98, in test_create_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fc5b3f51940> for seq=14
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Delete a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 176, in test_delete_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fc5b3f51940> for seq=15
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Get a list of Accounts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 185, in test_get_account_list
    self._create_accounts(5)
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fc5b3f51940> for seq=16
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should be healthy
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 86, in test_health
    self.assertEqual(resp.status_code, 200)
AssertionError: 302 != 200

======================================================================
FAIL: It should get 200_OK from the Home Page
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 81, in test_index
    self.assertEqual(response.status_code, status.HTTP_200_OK)
AssertionError: 302 != 200

======================================================================
FAIL: It should return 404_NOT_FOUND when resource not exists
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 120, in test_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should Read a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 136, in test_read_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fc5b3f51940> for seq=17
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return NOT found a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 145, in test_read_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should not Create an Account when sending the wrong media type
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 130, in test_unsupported_media_type
    self.assertEqual(response.status_code, status.HTTP_415_UNSUPPORTED_MEDIA_TYPE)
AssertionError: 302 != 415
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fc5b3f51940> for seq=18
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 151, in test_update_an_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fc5b3f51940> for seq=19
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return 404_NOT_FOUND when try update an inexisting account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 165, in test_update_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fc5b3f51940> for seq=20
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   20      3    85%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32     16    50%   16, 22-24, 35-37, 46-48, 61-63, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60     40    33%   19, 47-56, 67-74, 86-92, 103-113, 124-130, 140-144
----------------------------------------------------------------
TOTAL                                255     61    76%
----------------------------------------------------------------------
Ran 27 tests in 1.031s

FAILED (failures=13)

********************* [2024.11.19-08:15:31] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;31m- It should not allow an illegal method call (FAILED)[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;31m- It should not Create an Account when sending the wrong data (FAILED)[1;0m
[1;31m- It should Create a new Account (FAILED)[1;0m
[1;31m- It should Delete a single Account (FAILED)[1;0m
[1;31m- It should Get a list of Accounts (FAILED)[1;0m
[1;31m- It should be healthy (FAILED)[1;0m
[1;31m- It should get 200_OK from the Home Page (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when resource not exists (FAILED)[1;0m
[1;31m- It should Read a single Account (FAILED)[1;0m
[1;31m- It should return NOT found a single Account (FAILED)[1;0m
[1;32m- It should return security headers[1;0m
[1;31m- It should not Create an Account when sending the wrong media type (FAILED)[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when try update an inexisting account (FAILED)[1;0m

======================================================================
FAIL: It should not allow an illegal method call
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_error_handlers.py", line 52, in test_method_not_allowed
    self.assertEqual(resp.status_code, status.HTTP_405_METHOD_NOT_ALLOWED)
AssertionError: 302 != 405
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should not Create an Account when sending the wrong data
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 116, in test_bad_request
    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)
AssertionError: 302 != 400
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Create a new Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 99, in test_create_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0272643940> for seq=14
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Delete a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 177, in test_delete_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0272643940> for seq=15
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Get a list of Accounts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 186, in test_get_account_list
    self._create_accounts(5)
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0272643940> for seq=16
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should be healthy
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 87, in test_health
    self.assertEqual(resp.status_code, 200)
AssertionError: 302 != 200

======================================================================
FAIL: It should get 200_OK from the Home Page
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 82, in test_index
    self.assertEqual(response.status_code, status.HTTP_200_OK)
AssertionError: 302 != 200

======================================================================
FAIL: It should return 404_NOT_FOUND when resource not exists
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 121, in test_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should Read a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 137, in test_read_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0272643940> for seq=17
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return NOT found a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 146, in test_read_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should not Create an Account when sending the wrong media type
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 131, in test_unsupported_media_type
    self.assertEqual(response.status_code, status.HTTP_415_UNSUPPORTED_MEDIA_TYPE)
AssertionError: 302 != 415
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0272643940> for seq=18
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 152, in test_update_an_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0272643940> for seq=19
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return 404_NOT_FOUND when try update an inexisting account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 166, in test_update_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0272643940> for seq=20
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   20      3    85%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32     16    50%   16, 22-24, 35-37, 46-48, 61-63, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60     40    33%   19, 47-56, 67-74, 86-92, 103-113, 124-130, 140-144
----------------------------------------------------------------
TOTAL                                255     61    76%
----------------------------------------------------------------------
Ran 27 tests in 0.867s

FAILED (failures=13)

********************* [2024.11.19-08:14:56] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;31m- It should not allow an illegal method call (FAILED)[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;31m- It should not Create an Account when sending the wrong data (FAILED)[1;0m
[1;31m- It should Create a new Account (FAILED)[1;0m
[1;31m- It should Delete a single Account (FAILED)[1;0m
[1;31m- It should Get a list of Accounts (FAILED)[1;0m
[1;31m- It should be healthy (FAILED)[1;0m
[1;31m- It should get 200_OK from the Home Page (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when resource not exists (FAILED)[1;0m
[1;31m- It should Read a single Account (FAILED)[1;0m
[1;31m- It should return NOT found a single Account (FAILED)[1;0m
[1;32m- It should return security headers[1;0m
[1;31m- It should not Create an Account when sending the wrong media type (FAILED)[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when try update an inexisting account (FAILED)[1;0m

======================================================================
FAIL: It should not allow an illegal method call
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_error_handlers.py", line 52, in test_method_not_allowed
    self.assertEqual(resp.status_code, status.HTTP_405_METHOD_NOT_ALLOWED)
AssertionError: 302 != 405
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should not Create an Account when sending the wrong data
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 116, in test_bad_request
    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)
AssertionError: 302 != 400
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Create a new Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 99, in test_create_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f91e0952940> for seq=14
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Delete a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 177, in test_delete_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f91e0952940> for seq=15
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Get a list of Accounts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 186, in test_get_account_list
    self._create_accounts(5)
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f91e0952940> for seq=16
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should be healthy
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 87, in test_health
    self.assertEqual(resp.status_code, 200)
AssertionError: 302 != 200

======================================================================
FAIL: It should get 200_OK from the Home Page
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 82, in test_index
    self.assertEqual(response.status_code, status.HTTP_200_OK)
AssertionError: 302 != 200

======================================================================
FAIL: It should return 404_NOT_FOUND when resource not exists
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 121, in test_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should Read a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 137, in test_read_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 64, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f91e0952940> for seq=17
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return NOT found a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 146, in test_read_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should not Create an Account when sending the wrong media type
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 131, in test_unsupported_media_type
    self.assertEqual(response.status_code, status.HTTP_415_UNSUPPORTED_MEDIA_TYPE)
AssertionError: 302 != 415
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f91e0952940> for seq=18
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 152, in test_update_an_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f91e0952940> for seq=19
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return 404_NOT_FOUND when try update an inexisting account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 166, in test_update_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f91e0952940> for seq=20
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   20      3    85%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32     16    50%   16, 22-24, 35-37, 46-48, 61-63, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60     40    33%   19, 47-56, 67-74, 86-92, 103-113, 124-130, 140-144
----------------------------------------------------------------
TOTAL                                255     61    76%
----------------------------------------------------------------------
Ran 27 tests in 0.945s

FAILED (failures=13)

********************* [2024.11.19-08:14:14] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;31m- It should not allow an illegal method call (FAILED)[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;31m- It should not Create an Account when sending the wrong data (FAILED)[1;0m
[1;31m- It should Create a new Account (FAILED)[1;0m
[1;31m- It should Delete a single Account (FAILED)[1;0m
[1;31m- It should Get a list of Accounts (FAILED)[1;0m
[1;31m- It should be healthy (FAILED)[1;0m
[1;31m- It should get 200_OK from the Home Page (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when resource not exists (FAILED)[1;0m
[1;31m- It should Read a single Account (FAILED)[1;0m
[1;31m- It should return NOT found a single Account (FAILED)[1;0m
[1;32m- It should return security headers[1;0m
[1;31m- It should not Create an Account when sending the wrong media type (FAILED)[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m
[1;31m- It should return 404_NOT_FOUND when try update an inexisting account (FAILED)[1;0m

======================================================================
FAIL: It should not allow an illegal method call
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_error_handlers.py", line 52, in test_method_not_allowed
    self.assertEqual(resp.status_code, status.HTTP_405_METHOD_NOT_ALLOWED)
AssertionError: 302 != 405
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should not Create an Account when sending the wrong data
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 114, in test_bad_request
    self.assertEqual(response.status_code, status.HTTP_400_BAD_REQUEST)
AssertionError: 302 != 400
-------------------- >> begin captured logging << --------------------
flask.app: INFO: Initializing database
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Create a new Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 97, in test_create_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fa1ee7d2940> for seq=14
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Delete a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 175, in test_delete_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 63, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fa1ee7d2940> for seq=15
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Get a list of Accounts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 184, in test_get_account_list
    self._create_accounts(5)
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 63, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fa1ee7d2940> for seq=16
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should be healthy
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 85, in test_health
    self.assertEqual(resp.status_code, 200)
AssertionError: 302 != 200

======================================================================
FAIL: It should get 200_OK from the Home Page
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 80, in test_index
    self.assertEqual(response.status_code, status.HTTP_200_OK)
AssertionError: 302 != 200

======================================================================
FAIL: It should return 404_NOT_FOUND when resource not exists
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 119, in test_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should Read a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 135, in test_read_an_account
    test_account = self._create_accounts(1)[0]
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 63, in _create_accounts
    self.assertEqual(
AssertionError: 302 != 201 : Could not create test Account
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fa1ee7d2940> for seq=17
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return NOT found a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 144, in test_read_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_404_NOT_FOUND)
AssertionError: 302 != 404

======================================================================
FAIL: It should not Create an Account when sending the wrong media type
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 129, in test_unsupported_media_type
    self.assertEqual(response.status_code, status.HTTP_415_UNSUPPORTED_MEDIA_TYPE)
AssertionError: 302 != 415
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fa1ee7d2940> for seq=18
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 150, in test_update_an_account
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fa1ee7d2940> for seq=19
--------------------- >> end captured logging << ---------------------

======================================================================
FAIL: It should return 404_NOT_FOUND when try update an inexisting account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 164, in test_update_an_account_not_found
    self.assertEqual(response.status_code, status.HTTP_201_CREATED)
AssertionError: 302 != 201
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fa1ee7d2940> for seq=20
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   20      3    85%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32     16    50%   16, 22-24, 35-37, 46-48, 61-63, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60     40    33%   19, 47-56, 67-74, 86-92, 103-113, 124-130, 140-144
----------------------------------------------------------------
TOTAL                                255     61    76%
----------------------------------------------------------------------
Ran 27 tests in 1.105s

FAILED (failures=13)

********************* [2024.11.19-08:12:27] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;32m- It should not allow an illegal method call[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;31m- It should return security headers (FAILED)[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
FAIL: It should return security headers
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 201, in test_security_headers
    self.assertEqual(response.headers.get(key), value)
AssertionError: None != 'SAMEORIGIN'

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   34-37
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                253      8    97%
----------------------------------------------------------------------
Ran 27 tests in 0.871s

FAILED (failures=1)

********************* [2024.11.18-10:59:41] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;32m- It should not allow an illegal method call[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                253      8    97%
----------------------------------------------------------------------
Ran 26 tests in 0.940s

OK

********************* [2024.11.18-10:58:54] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;32m- It should not allow an illegal method call[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                253      8    97%
----------------------------------------------------------------------
Ran 26 tests in 0.905s

OK

********************* [2024.11.18-10:57:09] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Account Service Tests
[1;32m- It should not allow an illegal method call[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                253      8    97%
----------------------------------------------------------------------
Ran 26 tests in 0.898s

OK

********************* [2024.11.18-10:43:13] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should Get a list of Accounts[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                253     11    96%
----------------------------------------------------------------------
Ran 25 tests in 0.870s

OK

********************* [2024.11.18-10:37:07] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;31m- It should Get a list of Accounts (ERROR)[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
ERROR: It should Get a list of Accounts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 185, in test_get_account_list
    response = self.client.get(BASE_URL)
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 1135, in get
    return self.open(*args, **kw)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/testing.py", line 217, in open
    return super().open(
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 1089, in open
    response = self.run_wsgi_app(request.environ, buffered=buffered)
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 956, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 1237, in run_wsgi_app
    app_rv = app(environ, start_response)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 2095, in __call__
    return self.wsgi_app(environ, start_response)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 2080, in wsgi_app
    response = self.handle_exception(e)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 2077, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 1526, in full_dispatch_request
    return self.finalize_request(rv)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 1545, in finalize_request
    response = self.make_response(rv)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 1734, in make_response
    raise TypeError(
TypeError: The view function did not return a valid response. The return type must be a string, dict, tuple, Response instance, or WSGI callable, but it was a list.
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7ff93ff2e5e0> for seq=16
flask.app: INFO: Creating Samantha Mullins
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7ff93ff2e5e0> for seq=17
flask.app: INFO: Creating Carol Harris
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7ff93ff2e5e0> for seq=18
flask.app: INFO: Creating Erin Garcia
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7ff93ff2e5e0> for seq=19
flask.app: INFO: Creating Marissa Murray
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7ff93ff2e5e0> for seq=20
flask.app: INFO: Creating Michael Dean
flask.app: INFO: Processing all records
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                253     11    96%
----------------------------------------------------------------------
Ran 25 tests in 0.902s

FAILED (errors=1)

********************* [2024.11.18-10:29:46] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;31m- It should Get a list of Accounts (ERROR)[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
ERROR: It should Get a list of Accounts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 185, in test_get_account_list
    response = self.client.get(BASE_URL)
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 1135, in get
    return self.open(*args, **kw)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/testing.py", line 217, in open
    return super().open(
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 1089, in open
    response = self.run_wsgi_app(request.environ, buffered=buffered)
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 956, in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
  File "/home/theia/venv/lib/python3.9/site-packages/werkzeug/test.py", line 1237, in run_wsgi_app
    app_rv = app(environ, start_response)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 2095, in __call__
    return self.wsgi_app(environ, start_response)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 2080, in wsgi_app
    response = self.handle_exception(e)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 2077, in wsgi_app
    response = self.full_dispatch_request()
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 1526, in full_dispatch_request
    return self.finalize_request(rv)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 1545, in finalize_request
    response = self.make_response(rv)
  File "/home/theia/venv/lib/python3.9/site-packages/flask/app.py", line 1734, in make_response
    raise TypeError(
TypeError: The view function did not return a valid response. The return type must be a string, dict, tuple, Response instance, or WSGI callable, but it was a list.
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f9414b2e5e0> for seq=16
flask.app: INFO: Creating Meredith Gardner
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f9414b2e5e0> for seq=17
flask.app: INFO: Creating Jordan Valdez
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f9414b2e5e0> for seq=18
flask.app: INFO: Creating Mr. Michael Davis
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f9414b2e5e0> for seq=19
flask.app: INFO: Creating Sonya Holloway
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f9414b2e5e0> for seq=20
flask.app: INFO: Creating Matthew Carlson
flask.app: INFO: Processing all records
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     60      0   100%
----------------------------------------------------------------
TOTAL                                253     11    96%
----------------------------------------------------------------------
Ran 25 tests in 0.967s

FAILED (errors=1)

********************* [2024.11.18-10:18:05] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;31m- It should Get a list of Accounts (FAILED)[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
FAIL: It should Get a list of Accounts
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 186, in test_get_account_list
    self.assertEqual(response.status_code, status.HTTP_200_OK)
AssertionError: 405 != 200
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f8e85c70430> for seq=16
flask.app: INFO: Creating Gary Moore
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f8e85c70430> for seq=17
flask.app: INFO: Creating Brandy Jones
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f8e85c70430> for seq=18
flask.app: INFO: Creating Arthur Koch
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f8e85c70430> for seq=19
flask.app: INFO: Creating Drew Hicks
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f8e85c70430> for seq=20
flask.app: INFO: Creating Shawn Franklin
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     52      0   100%
----------------------------------------------------------------
TOTAL                                245      8    97%
----------------------------------------------------------------------
Ran 25 tests in 0.803s

FAILED (failures=1)

********************* [2024.11.18-10:04:45] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should Delete a single Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     52      0   100%
----------------------------------------------------------------
TOTAL                                245     11    96%
----------------------------------------------------------------------
Ran 24 tests in 0.859s

OK

********************* [2024.11.18-10:01:13] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;31m- It should Delete a single Account (FAILED)[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
FAIL: It should Delete a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 177, in test_delete_an_account
    self.assertEqual(response.status_code, status.HTTP_204_NO_CONTENT)
AssertionError: 405 != 204
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7ff721ab3280> for seq=15
flask.app: INFO: Creating William Gallegos
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      0   100%
----------------------------------------------------------------
TOTAL                                238      8    97%
----------------------------------------------------------------------
Ran 24 tests in 0.904s

FAILED (failures=1)

********************* [2024.11.18-10:00:27] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;31m- It should Read a single Account (FAILED)[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

======================================================================
FAIL: It should Read a single Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 177, in test_delete_an_account
    self.assertEqual(response.status_code, status.HTTP_204_NO_CONTENT)
AssertionError: 405 != 204
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f136f573280> for seq=15
flask.app: INFO: Creating Nathan Williams
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      0   100%
----------------------------------------------------------------
TOTAL                                238      8    97%
----------------------------------------------------------------------
Ran 24 tests in 0.921s

FAILED (failures=1)

********************* [2024.11.18-09:39:27] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should return 404_NOT_FOUND when try update an inexisting account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      0   100%
----------------------------------------------------------------
TOTAL                                238     11    95%
----------------------------------------------------------------------
Ran 23 tests in 0.995s

OK

********************* [2024.11.18-09:38:00] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m
[1;32m- It should Update an Account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      0   100%
----------------------------------------------------------------
TOTAL                                238     11    95%
----------------------------------------------------------------------
Ran 23 tests in 0.838s

OK

********************* [2024.11.18-09:35:32] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;32m- It should Update an Account[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      1    98%   99
----------------------------------------------------------------
TOTAL                                238     12    95%
----------------------------------------------------------------------
Ran 22 tests in 0.865s

OK

********************* [2024.11.18-09:34:36] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 158, in test_update_an_account
    self.assertEqual(updated_account["name"], f"{new_account['name']} Doe")
AssertionError: 'Jacob Peterson Doe' != 'Jacob Peterson Doe Doe'
- Jacob Peterson Doe
+ Jacob Peterson Doe Doe
?                ++++

-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f3f000b3280> for seq=17
flask.app: INFO: Creating Jacob Peterson
flask.app: INFO: Processing lookup for id 262 ...
flask.app: INFO: Updating Jacob Peterson Doe
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      1    98%   99
----------------------------------------------------------------
TOTAL                                238     12    95%
----------------------------------------------------------------------
Ran 22 tests in 0.825s

FAILED (failures=1)

********************* [2024.11.18-09:33:16] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 158, in test_update_an_account
    self.assertEqual(updated_account["name"], f"{new_account['name']} Doe")
AssertionError: 'Karen Clark Doe' != 'Karen Clark Doe Doe'
- Karen Clark Doe
+ Karen Clark Doe Doe
?             ++++

-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7fcd215b3280> for seq=17
flask.app: INFO: Creating Karen Clark
flask.app: INFO: Processing lookup for id 247 ...
flask.app: INFO: Updating Karen Clark Doe
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      1    98%   98
----------------------------------------------------------------
TOTAL                                238     12    95%
----------------------------------------------------------------------
Ran 22 tests in 0.742s

FAILED (failures=1)

********************* [2024.11.18-09:32:56] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 158, in test_update_an_account
    self.assertEqual(updated_account["name"], f"{new_account['name']} Doe")
AssertionError: 'Sarah Garrett Doe' != 'Sarah Garrett Doe Doe'
- Sarah Garrett Doe
+ Sarah Garrett Doe Doe
?               ++++

-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f7df8d73280> for seq=17
flask.app: INFO: Creating Sarah Garrett
flask.app: INFO: Processing lookup for id 232 ...
flask.app: INFO: Updating Sarah Garrett Doe
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     45      1    98%   97
----------------------------------------------------------------
TOTAL                                238     12    95%
----------------------------------------------------------------------
Ran 22 tests in 0.935s

FAILED (failures=1)

********************* [2024.11.18-09:31:25] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 158, in test_update_an_account
    self.assertEqual(updated_account["name"], f"{new_account['name']} Doe")
AssertionError: 'Christy Mcmillan Doe' != 'Christy Mcmillan Doe Doe'
- Christy Mcmillan Doe
+ Christy Mcmillan Doe Doe
?                  ++++

-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f556c7b31f0> for seq=17
flask.app: INFO: Creating Christy Mcmillan
flask.app: INFO: Processing lookup for id 217 ...
flask.app: INFO: Updating Christy Mcmillan Doe
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     44      1    98%   96
----------------------------------------------------------------
TOTAL                                237     12    95%
----------------------------------------------------------------------
Ran 22 tests in 0.775s

FAILED (failures=1)

********************* [2024.11.18-09:30:22] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 158, in test_update_an_account
    self.assertEqual(updated_account["name"], f"{new_account['name']} Doe")
AssertionError: 'Mandy Anderson Doe' != 'Mandy Anderson Doe Doe'
- Mandy Anderson Doe
+ Mandy Anderson Doe Doe
?                ++++

-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f9ebf7331f0> for seq=17
flask.app: INFO: Creating Mandy Anderson
flask.app: INFO: Processing lookup for id 202 ...
flask.app: INFO: Updating Mandy Anderson Doe
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     44      1    98%   96
----------------------------------------------------------------
TOTAL                                237     12    95%
----------------------------------------------------------------------
Ran 22 tests in 0.767s

FAILED (failures=1)

********************* [2024.11.18-09:24:31] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m
[1;31m- It should Update an Account (FAILED)[1;0m

======================================================================
FAIL: It should Update an Account
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_routes.py", line 156, in test_update_an_account
    self.assertEqual(response.status_code, status.HTTP_200_OK)
AssertionError: 405 != 200
-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7faff9cb1040> for seq=17
flask.app: INFO: Creating Cassandra Weber
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      3    91%   76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227      8    96%
----------------------------------------------------------------------
Ran 22 tests in 0.794s

FAILED (failures=1)

********************* [2024.11.18-08:40:26] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return 404_NOT_FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     11    95%
----------------------------------------------------------------------
Ran 21 tests in 0.733s

OK

********************* [2024.11.18-08:38:48] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return NOT FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     11    95%
----------------------------------------------------------------------
Ran 21 tests in 0.745s

OK

********************* [2024.11.18-08:29:11] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should return NOT FOUND when resource not exists[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      6    81%   46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     11    95%
----------------------------------------------------------------------
Ran 21 tests in 0.783s

OK

********************* [2024.11.18-08:18:12] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should Deserialize an account with no date[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      1    99%   32
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     14    94%
----------------------------------------------------------------------
Ran 20 tests in 0.769s

OK

********************* [2024.11.18-08:06:35] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      2    97%   32, 127
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     15    93%
----------------------------------------------------------------------
Ran 19 tests in 0.813s

OK

********************* [2024.11.18-08:06:11] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;31m- It should Create an Account and assert that it exists (FAILED)[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

======================================================================
FAIL: It should Create an Account and assert that it exists
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_models.py", line 60, in test_create_an_account
    self.assertEqual(str(account), f"<Product {account.name} id=[None]>")
AssertionError: '<Account Betty Baker id=[None]>' != '<Product Betty Baker id=[None]>'
- <Account Betty Baker id=[None]>
?  ^ ----
+ <Product Betty Baker id=[None]>
?  ^^^^^

-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f271b6f1040> for seq=1
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      2    97%   32, 127
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     15    93%
----------------------------------------------------------------------
Ran 19 tests in 0.800s

FAILED (failures=1)

********************* [2024.11.18-08:04:48] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;31m- It should Create an Account and assert that it exists (FAILED)[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

======================================================================
FAIL: It should Create an Account and assert that it exists
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/project/devops-capstone-project/tests/test_models.py", line 60, in test_create_an_account
    self.assertEqual(str(Account), f"<Product {account.name} id=[None]>")
AssertionError: "<class 'service.models.Account'>" != '<Product Linda Nelson id=[None]>'
- <class 'service.models.Account'>
+ <Product Linda Nelson id=[None]>

-------------------- >> begin captured logging << --------------------
factory.generate: DEBUG: Sequence: Computing next value of <function AccountFactory.<lambda> at 0x7f0b926b1040> for seq=1
--------------------- >> end captured logging << ---------------------

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      3    96%   32, 98, 127
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     16    93%
----------------------------------------------------------------------
Ran 19 tests in 0.749s

FAILED (failures=1)

********************* [2024.11.18-07:57:50] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      3    96%   32, 98, 127
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     16    93%
----------------------------------------------------------------------
Ran 19 tests in 0.766s

OK

********************* [2024.11.18-07:54:18] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should return NOT found a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      3    96%   32, 98, 127
service/routes.py                     34      0   100%
----------------------------------------------------------------
TOTAL                                227     16    93%
----------------------------------------------------------------------
Ran 19 tests in 0.763s

OK

********************* [2024.11.18-07:50:45] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should Read a single Account[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      3    96%   32, 98, 127
service/routes.py                     34      1    97%   82
----------------------------------------------------------------
TOTAL                                227     17    93%
----------------------------------------------------------------------
Ran 18 tests in 0.702s

OK

********************* [2024.11.18-06:49:31] *********************


Test Flask CLI Commands
[1;32m- It should call the db-create command[1;0m

Test Cases for Account Model
[1;32m- It should Create an account and add it to the database[1;0m
[1;32m- It should Create an Account and assert that it exists[1;0m
[1;32m- It should Delete an account from the database[1;0m
[1;32m- It should Deserialize an account[1;0m
[1;32m- It should not Deserialize an account with a KeyError[1;0m
[1;32m- It should not Deserialize an account with a TypeError[1;0m
[1;32m- It should Find an Account by name[1;0m
[1;32m- It should List all Accounts in the database[1;0m
[1;32m- It should Read an account[1;0m
[1;32m- It should Serialize an account[1;0m
[1;32m- It should Update an account[1;0m

Account Service Tests
[1;32m- It should not Create an Account when sending the wrong data[1;0m
[1;32m- It should Create a new Account[1;0m
[1;32m- It should be healthy[1;0m
[1;32m- It should get 200_OK from the Home Page[1;0m
[1;32m- It should not Create an Account when sending the wrong media type[1;0m

Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
service/__init__.py                   18      3    83%   32-35
service/common/__init__.py             0      0   100%
service/common/cli_commands.py         7      0   100%
service/common/error_handlers.py      32      9    72%   35-37, 46-48, 76-78
service/common/log_handlers.py        10      1    90%   21
service/common/status.py              46      0   100%
service/config.py                     11      0   100%
service/models.py                     69      3    96%   32, 98, 127
service/routes.py                     26      0   100%
----------------------------------------------------------------
TOTAL                                219     16    93%
----------------------------------------------------------------------
Ran 17 tests in 0.784s

OK

********************* [2024.11.18-06:48:41] *********************

Usage: nosetests [options]

nosetests: error: Error reading config file 'setup.cfg': While reading from 'setup.cfg' [line 14]: section 'nosetests' already exists
